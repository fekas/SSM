<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 通过注解创建Dao，Service，Controller 
	通过给bean上添加注解快速将bean添加到ioc容器中(需要导入spring-aop包)
	Spring有四个注解：
	@Controller: 推荐给控制器层
	@Service: 推荐给业务逻辑层
	@Repository: 推荐给持久化层
	@Component: 其他
	使用注解将组件加入到容器：
	1.在要添加的组件上添加注释
	2.告诉Spring。自动扫描添加注解的组件，依赖context名称空间
	-->
	<!-- context:component-scan:自动扫描组件
	base-package：指定扫描的基础包；把基础包及其下面的所有包的添加了注解的类自动扫面近ioc容器 ,id默认类名首字母小写-->
	<!-- 使用注解加入到容器中的组件和使用配置加入的行为都是一样的
			1.组件的id默认类名首字母小写
			2.组件作用域默认单例 -->
	<context:component-scan base-package="com.zhongbin" use-default-filters="true">
		<!-- 扫描的时候要排除的
			type：指定排除规则。
				annotation：标注了指定注解的不要
				assignable:指定排除具体的类 
				aspectj
				custom：自定义一个TypeFilter,自己写代码来决定
				regex：正则表达式
			expression:
		 -->
		<!--<context:exclude-filter type="regex" expression=""/> -->
		<!-- 只扫描那些组件，需要禁用默认的规则(use-default-filters="false")才会只让指定的组件进来-->
		<!--<context:include-filter type="annotation" expression=""/> -->
	</context:component-scan>
	<!-- 注解和bean配置相结合 -->
	
	<!-- @Autowired原理：
			1.先按照类型去容器中找
				找到一个：赋值
				没找到：抛异常
				找到多个：按照变量名作为id继续匹配 （可以在 @Autowired注解上添加@Qualifier("指定id")来匹配）
					匹配到：装配
					没有匹配到：报错
					
		@Autowired默认一定会装配上，可以用@Autowire里的require属性来修改。
					-->
</beans>
